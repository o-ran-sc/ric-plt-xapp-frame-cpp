/**
 * RIC subscription
 * This is the initial REST API for RIC subscription
 *
 * OpenAPI spec version: 0.0.4
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator 2.4.27-SNAPSHOT.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * SubscriptionParams.h
 *
 * 
 */

#ifndef IO_SWAGGER_CLIENT_MODEL_SubscriptionParams_H_
#define IO_SWAGGER_CLIENT_MODEL_SubscriptionParams_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>
#include "SubscriptionParams_E2SubscriptionDirectives.h"
#include "SubscriptionDetail.h"
#include "SubscriptionParams_ClientEndpoint.h"
#include <vector>

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  SubscriptionParams
    : public ModelBase
{
public:
    SubscriptionParams();
    virtual ~SubscriptionParams();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// SubscriptionParams members

    /// <summary>
    /// Optional subscription ID (Submgr allocates if not given)
    /// </summary>
    utility::string_t getSubscriptionId() const;
    bool subscriptionIdIsSet() const;
    SubscriptionParams& unsetSubscriptionId();
    SubscriptionParams& setSubscriptionId(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<SubscriptionParams_ClientEndpoint> getClientEndpoint() const;
        SubscriptionParams& setClientEndpoint(std::shared_ptr<SubscriptionParams_ClientEndpoint> value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getMeid() const;
        SubscriptionParams& setMeid(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    int32_t getRANFunctionID() const;
        SubscriptionParams& setRANFunctionID(int32_t value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<SubscriptionParams_E2SubscriptionDirectives> getE2SubscriptionDirectives() const;
    bool e2SubscriptionDirectivesIsSet() const;
    SubscriptionParams& unsetE2SubscriptionDirectives();
    SubscriptionParams& setE2SubscriptionDirectives(std::shared_ptr<SubscriptionParams_E2SubscriptionDirectives> value);
    /// <summary>
    /// 
    /// </summary>
    std::vector<std::shared_ptr<SubscriptionDetail>>& getSubscriptionDetails();
        SubscriptionParams& setSubscriptionDetails(std::vector<std::shared_ptr<SubscriptionDetail>> value);

protected:
    utility::string_t m_SubscriptionId;
    bool m_SubscriptionIdIsSet;
    std::shared_ptr<SubscriptionParams_ClientEndpoint> m_ClientEndpoint;
    utility::string_t m_Meid;
    int32_t m_RANFunctionID;
    std::shared_ptr<SubscriptionParams_E2SubscriptionDirectives> m_E2SubscriptionDirectives;
    bool m_E2SubscriptionDirectivesIsSet;
    std::vector<std::shared_ptr<SubscriptionDetail>> m_SubscriptionDetails;
    };

}
}
}
}

#endif /* IO_SWAGGER_CLIENT_MODEL_SubscriptionParams_H_ */
