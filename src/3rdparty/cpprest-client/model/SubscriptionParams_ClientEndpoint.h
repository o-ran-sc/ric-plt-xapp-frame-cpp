/**
 * RIC subscription
 * This is the initial REST API for RIC subscription
 *
 * OpenAPI spec version: 0.0.4
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator 2.4.27-SNAPSHOT.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * SubscriptionParams_ClientEndpoint.h
 *
 * xApp service address and port
 */

#ifndef IO_SWAGGER_CLIENT_MODEL_SubscriptionParams_ClientEndpoint_H_
#define IO_SWAGGER_CLIENT_MODEL_SubscriptionParams_ClientEndpoint_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// xApp service address and port
/// </summary>
class  SubscriptionParams_ClientEndpoint
    : public ModelBase
{
public:
    SubscriptionParams_ClientEndpoint();
    virtual ~SubscriptionParams_ClientEndpoint();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// SubscriptionParams_ClientEndpoint members

    /// <summary>
    /// xApp service address name like &#39;service-ricxapp-xappname-http.ricxapp&#39;
    /// </summary>
    utility::string_t getHost() const;
    bool hostIsSet() const;
    SubscriptionParams_ClientEndpoint& unsetHost();
    SubscriptionParams_ClientEndpoint& setHost(utility::string_t value);
    /// <summary>
    /// xApp HTTP service address port
    /// </summary>
    int32_t getHTTPPort() const;
    bool hTTPPortIsSet() const;
    SubscriptionParams_ClientEndpoint& unsetHTTPPort();
    SubscriptionParams_ClientEndpoint& setHTTPPort(int32_t value);
    /// <summary>
    /// xApp RMR service address port
    /// </summary>
    int32_t getRMRPort() const;
    bool rMRPortIsSet() const;
    SubscriptionParams_ClientEndpoint& unsetRMRPort();
    SubscriptionParams_ClientEndpoint& setRMRPort(int32_t value);

protected:
    utility::string_t m_Host;
    bool m_HostIsSet;
    int32_t m_HTTPPort;
    bool m_HTTPPortIsSet;
    int32_t m_RMRPort;
    bool m_RMRPortIsSet;
};

}
}
}
}

#endif /* IO_SWAGGER_CLIENT_MODEL_SubscriptionParams_ClientEndpoint_H_ */
