/**
 * RIC subscription
 * This is the initial REST API for RIC subscription
 *
 * OpenAPI spec version: 0.0.4
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator 2.4.27-SNAPSHOT.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * CommonApi.h
 *
 * 
 */

#ifndef IO_SWAGGER_CLIENT_API_CommonApi_H_
#define IO_SWAGGER_CLIENT_API_CommonApi_H_


#include "../ApiClient.h"

#include "RegisterData.h"
#include "SubscriptionData.h"
#include "SubscriptionParams.h"
#include "SubscriptionResponse.h"
#include <cpprest/details/basic_types.h>

#include <boost/optional.hpp>

namespace io {
namespace swagger {
namespace client {
namespace api {

using namespace io::swagger::client::model;

class  CommonApi
{
public:
    CommonApi( std::shared_ptr<ApiClient> apiClient );
    virtual ~CommonApi();
    /// <summary>
    /// Returns list of subscriptions/
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    pplx::task<std::vector<std::shared_ptr<SubscriptionData>>> getAllSubscriptions(
    );
    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="registerData">Register xApp with Appmgr (optional)</param>
    pplx::task<void> registerXapp(
        boost::optional<std::shared_ptr<RegisterData>> registerData
    );
    /// <summary>
    /// Subscribe a list of X2AP event triggers to receive messages sent by RAN
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="subscriptionParams">Subscription parameters (optional)</param>
    pplx::task<std::shared_ptr<SubscriptionResponse>> subscribe(
        boost::optional<std::shared_ptr<SubscriptionParams>> subscriptionParams
    );
    /// <summary>
    /// Unsubscribe X2AP events from Subscription Manager
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="subscriptionId">The subscriptionId received in the Subscription Response</param>
    pplx::task<void> unsubscribe(
        utility::string_t subscriptionId
    );

protected:
    std::shared_ptr<ApiClient> m_ApiClient;
};

}
}
}
}

#endif /* IO_SWAGGER_CLIENT_API_CommonApi_H_ */

